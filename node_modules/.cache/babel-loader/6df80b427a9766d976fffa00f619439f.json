{"remainingRequest":"/Users/weidian/Documents/projects/github/christmas/node_modules/thread-loader/dist/cjs.js!/Users/weidian/Documents/projects/github/christmas/node_modules/babel-loader/lib/index.js!/Users/weidian/Documents/projects/github/christmas/node_modules/eslint-loader/index.js??ref--13-0!/Users/weidian/Documents/projects/github/christmas/src/components/dialog/index.js","dependencies":[{"path":"/Users/weidian/Documents/projects/github/christmas/src/components/dialog/index.js","mtime":1545619220292},{"path":"/Users/weidian/Documents/projects/github/christmas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidian/Documents/projects/github/christmas/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidian/Documents/projects/github/christmas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weidian/Documents/projects/github/christmas/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Main from './component.vue';\nvar MessageConstructor = Vue.extend(Main);\nvar instance;\nvar instances = [];\nvar seed = 1;\n\nvar Dialog = function Dialog(options) {\n  options = options || {};\n\n  if (typeof options === 'string') {\n    options = {\n      message: options\n    };\n  }\n\n  var userOnClose = options.onClose;\n  var id = 'message_' + seed++;\n\n  options.onClose = function () {\n    Dialog.close(id, userOnClose);\n  };\n\n  instance = new MessageConstructor({\n    data: options\n  });\n  instance.id = id;\n  instance.vm = instance.$mount();\n  document.body.appendChild(instance.vm.$el);\n  instance.vm.visible = true;\n  instance.dom = instance.vm.$el;\n  instances.push(instance);\n  return instance.vm;\n};\n\nDialog.close = function (id, userOnClose) {\n  for (var i = 0, len = instances.length; i < len; i++) {\n    if (id === instances[i].id) {\n      if (typeof userOnClose === 'function') {\n        userOnClose(instances[i]);\n      }\n\n      instances.splice(i, 1);\n      break;\n    }\n  }\n};\n\nexport default Dialog;",{"version":3,"sources":["/Users/weidian/Documents/projects/github/christmas/src/components/dialog/index.js"],"names":["Vue","Main","MessageConstructor","extend","instance","instances","seed","Dialog","options","message","userOnClose","onClose","id","close","data","vm","$mount","document","body","appendChild","$el","visible","dom","push","i","len","length","splice"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,IAAIC,kBAAkB,GAAGF,GAAG,CAACG,MAAJ,CAAWF,IAAX,CAAzB;AAEA,IAAIG,QAAJ;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,IAAI,GAAG,CAAX;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAASC,OAAT,EAAkB;AAChCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,IAAAA,OAAO,GAAG;AACTC,MAAAA,OAAO,EAAED;AADA,KAAV;AAGA;;AACD,MAAIE,WAAW,GAAGF,OAAO,CAACG,OAA1B;AACA,MAAIC,EAAE,GAAG,aAAaN,IAAI,EAA1B;;AAEAE,EAAAA,OAAO,CAACG,OAAR,GAAkB,YAAW;AAC5BJ,IAAAA,MAAM,CAACM,KAAP,CAAaD,EAAb,EAAiBF,WAAjB;AACA,GAFD;;AAGAN,EAAAA,QAAQ,GAAG,IAAIF,kBAAJ,CAAuB;AACjCY,IAAAA,IAAI,EAAEN;AAD2B,GAAvB,CAAX;AAGAJ,EAAAA,QAAQ,CAACQ,EAAT,GAAcA,EAAd;AAEAR,EAAAA,QAAQ,CAACW,EAAT,GAAcX,QAAQ,CAACY,MAAT,EAAd;AACAC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0Bf,QAAQ,CAACW,EAAT,CAAYK,GAAtC;AACAhB,EAAAA,QAAQ,CAACW,EAAT,CAAYM,OAAZ,GAAsB,IAAtB;AACAjB,EAAAA,QAAQ,CAACkB,GAAT,GAAelB,QAAQ,CAACW,EAAT,CAAYK,GAA3B;AACAf,EAAAA,SAAS,CAACkB,IAAV,CAAenB,QAAf;AACA,SAAOA,QAAQ,CAACW,EAAhB;AACA,CAxBD;;AA2BAR,MAAM,CAACM,KAAP,GAAe,UAASD,EAAT,EAAaF,WAAb,EAA0B;AACxC,OAAK,IAAIc,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGpB,SAAS,CAACqB,MAAhC,EAAwCF,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AACrD,QAAIZ,EAAE,KAAKP,SAAS,CAACmB,CAAD,CAAT,CAAaZ,EAAxB,EAA4B;AAC3B,UAAI,OAAOF,WAAP,KAAuB,UAA3B,EAAuC;AACtCA,QAAAA,WAAW,CAACL,SAAS,CAACmB,CAAD,CAAV,CAAX;AACA;;AACDnB,MAAAA,SAAS,CAACsB,MAAV,CAAiBH,CAAjB,EAAoB,CAApB;AACA;AACA;AACD;AACD,CAVD;;AAYA,eAAejB,MAAf","sourcesContent":["import Vue from 'vue';\nimport Main from './component.vue';\nlet MessageConstructor = Vue.extend(Main);\n\nlet instance;\nlet instances = [];\nlet seed = 1;\n\nconst Dialog = function(options) {\n\toptions = options || {};\n\tif (typeof options === 'string') {\n\t\toptions = {\n\t\t\tmessage: options\n\t\t};\n\t}\n\tlet userOnClose = options.onClose;\n\tlet id = 'message_' + seed++;\n\n\toptions.onClose = function() {\n\t\tDialog.close(id, userOnClose);\n\t};\n\tinstance = new MessageConstructor({\n\t\tdata: options\n\t});\n\tinstance.id = id;\n\n\tinstance.vm = instance.$mount();\n\tdocument.body.appendChild(instance.vm.$el);\n\tinstance.vm.visible = true;\n\tinstance.dom = instance.vm.$el;\n\tinstances.push(instance);\n\treturn instance.vm;\n};\n\n\nDialog.close = function(id, userOnClose) {\n\tfor (let i = 0, len = instances.length; i < len; i++) {\n\t\tif (id === instances[i].id) {\n\t\t\tif (typeof userOnClose === 'function') {\n\t\t\t\tuserOnClose(instances[i]);\n\t\t\t}\n\t\t\tinstances.splice(i, 1);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default Dialog;\n"]}]}